steps:
  #
  # Building
  #

  - id: copy-envs
    name: node:14
    entrypoint: npm
    args: ['run', 'create-env']
    env:
      - 'DATOCMS_API_TOKEN=${_DATOCMS_API_TOKEN}'
      - 'DATOCMS_API_URL=${_DATOCMS_API_URL}'
      - 'BASEURL=${_BASEURL}'
      - 'FIRESTORE_DB=${_FIRESTORE_DB}'
      - 'SLACK_NOTIFICATION_URL=${_SLACK_NOTIFICATION_URL}'
      - 'MONITOR_URL=${_MONITOR_URL}'
      - 'BUCKET_NAME=${_BUCKET_NAME}'
      - 'BROWSERSTACK_USERNAME=${_BROWSERSTACK_USERNAME}'
      - 'BROWSERSTACK_ACCESS_KEY=${_BROWSERSTACK_ACCESS_KEY}'
      - 'HONEYBADGER_API_KEY=${_HONEYBADGER_API_KEY}'
      - 'HONEYBADGER_ASSETS_URL=${_HONEYBADGER_ASSETS_URL}'
      - 'HONEYBADGER_ENV=${_HONEYBADGER_ENV}'
      - 'DEFAULT_RUNNER=${_DEFAULT_RUNNER}'

  - id: build-builder
    name: gcr.io/cloud-builders/docker
    args:
      [
        'build',
        '--rm=false',
        '-t',
        'gcr.io/bizsys/site-monitor-deploy:$COMMIT_SHA',
        '-f',
        'Dockerfile',
        '.',
      ]
    env:
      - 'BUILD=$BUILD_ID'
      - 'PROJECT=$PROJECT_ID'
      - 'COMMIT_SHA=$COMMIT_SHA'
      - 'REV=$REVISION_ID'
      - 'BRANCH_NAME=$BRANCH_NAME'

  #
  # Push the container image to Container Registry
  #
  - id: image-to-container-registry
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/bizsys/site-monitor-deploy:$COMMIT_SHA']

  # Deploy container image to Cloud Run
  - id: deploy
    name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'site-monitor-$BRANCH_NAME-deploy'
      - '--image'
      - 'gcr.io/bizsys/site-monitor-deploy:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--port'
      - '3000'
      - '--allow-unauthenticated'
timeout: '1800s' # extend timeout for build to 30 minutes